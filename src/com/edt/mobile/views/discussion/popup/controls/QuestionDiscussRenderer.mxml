<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:controls="com.evola.driving.controls.*"
				width="100%"
				xmlns:components="com.edt.mobile.components.*">

	<s:layout>
		<s:VerticalLayout gap="0"/>
	</s:layout>

	<s:BorderContainer width="100%"
					   borderVisible="false"
					   backgroundColor="{ThemeColors.FORUM_HEADER}"
					   color="#FFFFFF">

		<s:layout>
			<s:HorizontalLayout verticalAlign="middle"
								paddingLeft="4"
								paddingRight="4"/>
		</s:layout>

		<s:Label width="30"
				 color="#FFFFFF"
				 text="{getMessageNumber(presenter.model.messages.getItemIndex(message))}"/>

		<s:Label text="{DateUtils.formatDateExtended(FormattingUtils.parseJavaDateString(message.attribute('report-date')))}"/>

		<s:Spacer width="100%"/>

		<s:Label click="presenter.replyMessageClicked(message)"
				 color="#FFFFFF"
				 textDecoration="underline"
				 text="odgovori"/>

	</s:BorderContainer>

	<s:VGroup width="100%"
			  gap="0">

		<s:BorderContainer width="100%"
						   height="100%"
						   borderVisible="false"
						   backgroundColor="{ThemeColors.FORUM_DETAILS}">

			<s:layout>
				<s:HorizontalLayout/>
			</s:layout>

			<components:EImage width="50"
							   height="50"
							   source="{URLUtils.smallProfileImage(Settings.SERVER, message.attribute('user-id'))}"/>

			<s:VGroup width="100%"
					  paddingLeft="2"
					  paddingTop="2">

				<s:Label width="100%"
						 fontWeight="bold"
						 text="{message.attribute('user-name')}"/>

				<s:Label text="{message.attribute('user-level')}. nivo"/>

			</s:VGroup>

			<s:VGroup paddingTop="2"
					  paddingRight="2"
					  height="100%"
					  verticalAlign="middle">

				<s:Label visible="{isDeleteVisible(message, Settings.userId, presenter.model.isAdministrator)}"
						 color="{ThemeColors.RED}"
						 textDecoration="underline"
						 click="presenter.deleteMessageClicked(message)"
						 enabled="{presenter.model.deletedMessage == null}"
						 text="obriÅ¡i poruku"/>

			</s:VGroup>

		</s:BorderContainer>

		<s:BorderContainer width="100%"
						   borderVisible="false"
						   backgroundColor="{ThemeColors.FORUM_MESSAGE}">

			<s:layout>
				<s:VerticalLayout paddingBottom="4"
								  paddingLeft="4"
								  paddingRight="4"
								  paddingTop="4"/>
			</s:layout>

			<s:BorderContainer visible="{hasReplyMessage(message)}"
							   width="100%"
							   backgroundColor="#FFFFFF"
							   borderStyle="solid"
							   borderColor="{ThemeColors.GRAY}"
							   includeInLayout="{hasReplyMessage(message)}">

				<s:layout>
					<s:VerticalLayout paddingBottom="2"
									  paddingLeft="2"
									  paddingRight="2"
									  paddingTop="2"/>
				</s:layout>

				<s:Label text="{getRepliedMessage(message)}"
						 fontStyle="italic"/>

				<s:Label width="100%"
						 text="{message.attribute('parent-message-text')}"/>

			</s:BorderContainer>

			<s:Label width="100%"
					 text="{message.attribute('message-text')}"/>


		</s:BorderContainer>

	</s:VGroup>

	<fx:Script>
		<![CDATA[
			import com.edt.mobile.utils.Settings;
			import com.edt.mobile.views.discussion.popup.QuestionDiscussPresenter;
			import com.evola.driving.util.DateUtils;
			import com.evola.driving.util.FormattingUtils;
			import com.evola.driving.util.ThemeColors;
			import com.evola.driving.util.URLUtils;

			[Bindable]
			public var message:XML;

			[Bindable]
			public var presenter:QuestionDiscussPresenter;

			[Bindable]
			public var index:int=-1;

			private function isDeleteVisible(message:XML, userId:String, isAdministrator:Boolean):Boolean
			{

				var result:Boolean=false;

				var messageUserId:String=message.attribute('user-id');

				//ako je korisnik administrator ili ako je on i napisao poruku onda dozvoljavamo brisanje
				if (isAdministrator || userId == messageUserId)
					result=true;

				return result;
			}

			private function getMessageNumber(index:int):String
			{

				var messageNumber:int=index + 1 + presenter.model.pageSize * presenter.model.currentPageIndex;

				return "#" + messageNumber;
			}

			private static function hasReplyMessage(message:XML):Object
			{

				var attribute:XMLList=message.attribute('parent-message-id');

				return attribute && attribute.length() > 0;
			}

			private static function getRepliedMessage(message:XML):Object
			{

				var isMale:Boolean=message.attribute('parent-message-user-is-male') == "true";

				var text:String=message.attribute('parent-message-user-name');

				if (isMale)
					text+=" je rekao ";
				else
					text+=" je rekla ";

				text+=DateUtils.getPrettyTimeAgoText(FormattingUtils.parseJavaDateString(message.attribute('parent-message-date')));

				text+=":";

				return text;
			}
		]]>
	</fx:Script>

</s:ItemRenderer>
